services:
  db:
    image: postgres:16.3-alpine3.20
    container_name: db
    restart: always
    volumes:
      - ./pgdata/data:/var/lib/postgresql/data
      - ./pgdata/log:/var/log/postgresql
      - ./pgdata/etc:/etc/postgresql
      - ./initdb/initdb.sh:/docker-entrypoint-initdb.d/initdb.sh:ro
    environment:
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=ZabbixPasswd
      - POSTGRES_DB=zabbix
    
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "zabbix"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    networks:
      - dbNet
    

  zabbix-srv:      
    image: zabbix/zabbix-server-pgsql:alpine-7.0.0
    container_name: zabbix-srv
    restart: always
    environment:
      - DB_SERVER_HOST=db
      - POSTGRES_USER=zabbix
      - POSTGRES_PASSWORD=ZabbixPasswd
      - DB_SERVER_DBNAME=zabbix
    depends_on:
      - db
    networks:
      # - webNet
      - zNet
      - dbNet


  zabbix-web:
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0.0
    container_name: zabbix-web
    restart: always
    environment:
      DB_SERVER_HOST: db
      DB_SERVER_DBNAME: zabbix
      POSTGRES_USER: zabbix
      POSTGRES_PASSWORD: ZabbixPasswd
      ZBX_SERVER_HOST: zabbix-srv
      PHP_TZ: Europe/Saratov
      DB_SERVER_PORT: 5432
      ZBX_SERVER_PORT: 10051
    depends_on:
      - db
      - zabbix-srv
    ports:
      - "80:8080"
    networks:
      - zNet
      - dbNet      

    

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    depends_on:
      - db
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - dbNet   

networks:
  zNet:
    driver: "bridge"
  dbNet:
    driver: "bridge"


