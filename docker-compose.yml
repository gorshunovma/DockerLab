services:
  db:
    # build:
    #    context: .
    #    dockerfile: Dockerfile.postgres
    # image: ubuntu24.04-postgres16:1.0
    #image: postgres:15.8-alpine3.20
    image: postgres:16.3-alpine3.20
    #image: 16.4-alpine3.20-zbx

    container_name: db
    #restart: always
    networks:
      - dbNet
          # ipv4_address: 192.168.2.2

    volumes:
      - ./postgresql/data:/var/lib/postgresql
      - ./postgresql/log:/var/log/postgresql
      - ./postgresql/etc:/etc/postgresql
      - ./postgresql/initdb:/docker-entrypoint-initdb.d/initdb
      # - ./postgresql/entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=zabbix
      - POSTGRES_DB=zabbix

    shm_size: 1G


    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  zabbix:
    # build:
    #   context: .
    #   dockerfile: Dockerfile.postgres
    # image: zabbix/zabbix-web-nginx-pgsql:ubuntu-7.0.0
    image: zabbix/zabbix-web-nginx-pgsql:alpine-7.0.0
    container_name: zabbix
    #restart: always
    networks:
      # - webNet
      - dbNet
        # ipv4_address: 192.168.2.3

    environment:
      DB_SERVER_HOST: db
      DB_SERVER_DBNAME: zabbix
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: zabbix
      ZBX_SERVER_HOST: zabbix
      PHP_TZ: Europe/Saratov
      DB_SERVER_PORT: 5432
      ZBX_SERVER_PORT: 10051
    depends_on:
      - db
    ports:
      - "127.0.0.1:80:8080"
      



  # nginx:
  #   # build:
  #   #   context: .
  #   #   dockerfile: Dockerfile.nginx
  #   # image: ubuntu24.04-nginx:1.0
  #   image: nginx:1.27-alpine3.19-slim
  #   container_name: web

  #   depends_on:
  #     - zabbix
  #   #restart: always
  #   volumes:
  #     - ./nginx/default:/etc/nginx/sites-available/default
  #     # /docker-entrypoint.d/
  #   # ports:
  #   #   - "127.0.0.1:80:80"
  #   networks:
  #     - webNet


networks:
  dbNet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.2.0/24

  # webNet:
  #   driver: bridge